[tool.poetry]
name = "fast-zero-projeto-final"
version = "0.1.0"
description = ""
authors = ["vitorthedev <vitorthedev@gmail.com>"]
readme = "README.md"


[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
run = 'fastapi dev _projeto_final/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero_projeto_final -vv'
post_test = 'coverage html'
docker_build = 'docker rm fastzeroapp || docker build -t "fast_zero_projeto_final" .'
docker_run_it = 'docker run -it --name fastzeroapp -p 8000:8000 fast_zero_projeto_final:latest'
docker_run = 'docker run -d --name fastzeroapp -p 8000:8000 fast_zero_projeto_final:latest'
docker_migrations = 'docker exec -it fastzeroapp poetry run alembic upgrade head'
docker_stop = 'docker stop fastzeroapp'
compose_up = 'docker-compose up'
compose_down = 'docker-compose down'
deploy = 'fly deploy --local-only --ha=false'


[tool.poetry.dependencies]
python = "3.12.4"
fastapi = "^0.111.1"
pydantic = {extras = ["email"], version = "^2.8.2"}
sqlalchemy = "^2.0.31"
pydantic-settings = "^2.3.4"
alembic = "^1.13.2"
pyjwt = "^2.8.0"
pwdlib = {extras = ["argon2"], version = "^0.2.0"}
python-multipart = "^0.0.9"
pytz = "^2024.1"
tzdata = "^2024.1"
psycopg = {extras = ["binary"], version = "^3.2.1"}


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.1"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.5.4"
httpx = "^0.27.0"
factory-boy = "^3.3.0"
freezegun = "^1.5.1"
testcontainers = "^4.7.2"


[tool.ruff]
line-length = 79
extend-exclude = ['migrations']


[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']


[tool.ruff.format]
preview = true
quote-style = 'single'


[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
